insertUser = INSERT INTO CCJ_USER (USERNAME, PASSWORD, PASSWORD_SALT) values(?, ?, ?)
initRatings = INSERT INTO CCJ_RATING_GENERAL (USERID, PRODUCTID, RATING) SELECT (SELECT MAX (USERID) FROM CCJ_USER), PRODUCTID, 0 FROM CCJ_PRODUCTS
getUserPassword = SELECT PASSWORD from CCJ_USER WHERE USERNAME = ?
getUserSalt = SELECT PASSWORD_SALT from CCJ_USER WHERE USERNAME = ?
getUserID = SELECT USERID FROM CCJ_USER WHERE USERNAME = ?
getRatingList = SELECT PROD.PRODUCTID, PRODUCTNAME, RATE.RATING, DESCRIPTION, PRODUCTTYPE FROM CCJ_PRODUCTS PROD, CCJ_RATING_GENERAL RATE WHERE RATE.PRODUCTID = PROD.PRODUCTID AND USERID = ? AND ora_hash (PROD.PRODUCTID, (SELECT to_char(sysdate, 'ss') FROM dual)) < ?
updateRatings = UPDATE CCJ_RATING_GENERAL SET RATING = ? WHERE USERID = ? AND PRODUCTID = ?
getRatingCount = SELECT COUNT (*) FROM CCJ_RATING_GENERAL WHERE USERID = ? AND RATING <> 0
getSimilarUsers = select * from (select zaehler.userid, round(zaehler.zaehler / nenner.nenner,2) aehnlichkeit from (select userid, sum (xxx) zaehler from (select otheruser.userid, otheruser.produktid, activuser.bewertung_pears * otheruser.bewertung_pears xxx from (select * from ZZZ_NORMPEARS where userid = ?) activuser,(select * from ZZZ_NORMPEARS where userid != ?) otheruser where activuser.produktid = otheruser.produktid) group by userid) zaehler, (select b.userid, a.quadrat * b.quadrat nenner from (select userid, sqrt( sum( POWER (bewertung_pears, 2) ) ) quadrat from (select * from ZZZ_NORMPEARS where userid = ? ) group by userid) a, (select userid, sqrt( sum( POWER (bewertung_pears, 2) ) ) quadrat from (select * from ZZZ_NORMPEARS where userid != ?) group by userid ) b) nenner where nenner.userid = zaehler.userid and nenner <> 0) where aehnlichkeit > ? 
getProductRecommendations = select * from (select produktid, produktname, dense_rank () over (order by rating desc) Rang, round (Rating, 2) Rating from (select a.produktid, b.produktname, rating from (select * from (select avg(Bewertung) Rating, produktid from (select * from ZZZ_RATING where userid in (?) and not produktid in (select produktid from ZZZ_RATING where userid = ? and Bewertung <> 0)) group by produktid ) where Rating > ? ) a, ZZZ_Produkte b where a.produktid = b.produktid )) where Rang <= ? order by Rang asc
getPopularProducts = select produktname, description from ZZZ_produkte where id in (select id from (select id, rank() over (order by xxx desc) yyy from (select distinct id, avg(bewertung_pears) over (partition by produktid) xxx from ZZZ_NORMPEARS where bewertung_pears > 0)) where yyy <= 5)