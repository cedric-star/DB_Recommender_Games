insertUser = insert into ZZZ_User (Userid, Username, Password) values(AAC_VORLAGEN_SEQUENCE.nextval,? ,?)
initRatings = insert into ZZZ_Rating (select (select max (userid) from ZZZ_User), id, 0, 13 from ZZZ_Produkte)
getUserPassword = select password from ZZZ_User where username = ? 
getUserID = select userid from ZZZ_user where username=?
getRatingList = SELECT p.id, produktname, bewertung, description from ZZZ_Produkte p, ZZZ_Rating r where r.produktid = p.id and userid = ? and ora_hash (p.id, (select to_char(sysdate, 'ss') from dual)) < ?
updateRatings = update ZZZ_Rating set bewertung= ? where userid = ? and produktid = ?
getRatingCount = select count (*) from ZZZ_Rating where userid = ? and bewertung <> 0
getSimilarUsers = select * from (select zaehler.userid, round(zaehler.zaehler / nenner.nenner,2) aehnlichkeit from (select userid, sum (xxx) zaehler from (select otheruser.userid, otheruser.produktid, activuser.bewertung_pears * otheruser.bewertung_pears xxx from (select * from ZZZ_NORMPEARS where userid = ?) activuser,(select * from ZZZ_NORMPEARS where userid != ?) otheruser where activuser.produktid = otheruser.produktid) group by userid) zaehler, (select b.userid, a.quadrat * b.quadrat nenner from (select userid, sqrt( sum( POWER (bewertung_pears, 2) ) ) quadrat from (select * from ZZZ_NORMPEARS where userid = ? ) group by userid) a, (select userid, sqrt( sum( POWER (bewertung_pears, 2) ) ) quadrat from (select * from ZZZ_NORMPEARS where userid != ?) group by userid ) b) nenner where nenner.userid = zaehler.userid and nenner <> 0) where aehnlichkeit > ? 
getProductRecommendations = select * from (select produktid, produktname, dense_rank () over (order by rating desc) Rang, round (Rating, 2) Rating from (select a.produktid, b.produktname, rating from (select * from (select avg(Bewertung) Rating, produktid from (select * from ZZZ_RATING where userid in (?) and not produktid in (select produktid from ZZZ_RATING where userid = ? and Bewertung <> 0)) group by produktid ) where Rating > ? ) a, ZZZ_Produkte b where a.produktid = b.produktid )) where Rang <= ? order by Rang asc
getPopularProducts = select produktname, description from ZZZ_produkte where id in (select id from (select id, rank() over (order by xxx desc) yyy from (select distinct id, avg(bewertung_pears) over (partition by produktid) xxx from ZZZ_NORMPEARS where bewertung_pears > 0)) where yyy <= 5)